<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>View Blog</title>
</head>
<body>
  <a href="/blogs">Back to blogs</a>
  <div id="blog">Loading...</div>

  <script>
    async function load() {
      const id = location.pathname.split('/').pop();
      try {
        const headers = {};
        const token = localStorage.getItem('token');
        if (token) headers['Authorization'] = 'Bearer ' + token;
        const res = await fetch('/api/blogs/' + id, { headers });
        if (!res.ok) throw new Error('Blog not found');
        const blog = await res.json();
        const currentUserId = "<%= currentUser ? currentUser.id : '' %>";
        const authorId = blog.author && (blog.author._id || blog.author.id || '');
        const isOwner = currentUserId && authorId && String(currentUserId) === String(authorId);

        document.getElementById('blog').innerHTML = `
          <h1>${blog.title}</h1>
          <p>${blog.description || ''}</p>
          <div>${blog.body}</div>
          <p><small>By: ${blog.author?.first_name || ''} ${blog.author?.last_name || ''}</small></p>
          ${isOwner ? '<div><a href="/blogs/'+id+'/edit">Edit</a> | <button id="publishBtn">Publish</button> | <button id="deleteBtn">Delete</button></div>' : ''}
        `;

        if (isOwner) {
          document.getElementById('publishBtn').addEventListener('click', async () => {
            try {
              const resp = await fetch('/api/blogs/' + id + '/state', { method: 'PATCH', headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('token') }, body: JSON.stringify({ state: 'published' }) });
              if (!resp.ok) throw new Error('Failed to publish');
              alert('Published');
              location.reload();
            } catch (e) { alert(e.message); }
          });

          document.getElementById('deleteBtn').addEventListener('click', async () => {
            if (!confirm('Delete this blog?')) return;
            try {
              const resp = await fetch('/api/blogs/' + id, { method: 'DELETE', headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token') } });
              if (!resp.ok) throw new Error('Failed to delete');
              alert('Deleted');
              location.href = '/blogs';
            } catch (e) { alert(e.message); }
          });
        }
      } catch (err) {
        document.getElementById('blog').textContent = err.message;
      }
    }
    load();
  </script>
</body>
</html>
